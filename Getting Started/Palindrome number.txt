import java.util.Scanner;

/**
 * Question Description:
 * This program checks whether a given integer is a palindrome.
 * A palindrome number reads the same backward as forward (e.g., 121, 1331).

 * Input Format:
 * A single integer entered by the user.

 * Output Format:
 * A message indicating whether the number is a palindrome or not.

 * Approach:
 * - Read an integer from the user.
 * - Store the original number in a temporary variable.
 * - Reverse the number using a while loop:
 *   - Extract the last digit using modulo (%).
 *   - Append it to the reversed number.
 *   - Remove the last digit using division (/).
 * - Compare the reversed number with the original.
 * - If they are equal, the number is a palindrome.

 * Time Complexity: O(d), where d is the number of digits in the input number.
 * Space Complexity: O(1), as only a constant amount of space is used.
 */

class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        System.out.print("Enter the number: ");
        int num = scanner.nextInt();
        int reversed = 0, remainder;
        int original = num;

        while (num > 0) {
            remainder = num % 10;
            reversed = (reversed * 10) + remainder;
            num /= 10;
        }

        if (reversed == original) {
            System.out.println("It's a Palindrome number.");
        } else {
            System.out.println("Not a Palindrome number.");
        }

        scanner.close();
    }
}
